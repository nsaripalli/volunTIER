{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Trevor\\\\Beanpot2019\\\\volunTIER\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Trevor\\\\Beanpot2019\\\\volunTIER\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Trevor\\\\Beanpot2019\\\\volunTIER\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Trevor\\\\Beanpot2019\\\\volunTIER\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Trevor\\\\Beanpot2019\\\\volunTIER\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Trevor\\\\Beanpot2019\\\\volunTIER\\\\UI\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Trevor\\\\Beanpot2019\\\\volunTIER\\\\UI\\\\src\\\\components\\\\FriendsList.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport './bootstrap.css';\nimport './FriendsList.css';\nimport Card from 'react-bootstrap/Card';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nvar instance = axios.create({\n  baseURL: \"http://localhost/8080\",\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Accept': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n});\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n    _this.state = {\n      text: React.createElement(React.Fragment, null, React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Friends?\"), React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Dapibus ac facilisis in\"), React.createElement(ListGroup.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Vestibulum at eros\")),\n      globalList: []\n    };\n    _this.onClickButton1 = _this.onClickButton1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickButton2 = _this.onClickButton2.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getGlobalLeaderboard = _this.getGlobalLeaderboard.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"getGlobalLeaderboard\",\n    value: function getGlobalLeaderboard() {\n      var currentComponent = this;\n      instance.get('/leaderboard/global').then(function (response) {\n        currentComponent.setState({\n          globalList: response.data\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getGlobalLeaderboard();\n    }\n  }, {\n    key: \"onClickButton1\",\n    value: function onClickButton1() {\n      var leaderboard = this.state.globalList.map(function (item) {\n        return React.createElement(ListGroup.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \" \", item.name, \" \");\n      });\n      this.setState({\n        text: {\n          leaderboard: leaderboard\n        }\n      });\n    }\n  }, {\n    key: \"onClickButton2\",\n    value: function onClickButton2() {\n      this.setState({\n        text: React.createElement(React.Fragment, null, React.createElement(ListGroup.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"AHHHH\"), React.createElement(ListGroup.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"GLOBAL\"), React.createElement(ListGroup.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"oof\"))\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getGlobalLeaderboard();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var leaderboard = this.state.globalList.map(function (item) {\n        return React.createElement(ListGroup.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, item.name), React.createElement(\"div\", {\n          className: \"score\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, item.points));\n      });\n      return React.createElement(React.Fragment, null, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        variant: \"tabs\",\n        defaultActiveKey: \"#global\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Nav.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        href: \"#friends\",\n        onClick: this.onClickButton1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Friends\")), React.createElement(Nav.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        href: \"#global\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Global\")))), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Card.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Rankings\"), React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        className: \"list-group-flush\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, leaderboard)))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["C:\\Users\\Trevor\\Beanpot2019\\volunTIER\\UI\\src\\components\\FriendsList.js"],"names":["React","axios","Card","Nav","Button","ListGroup","instance","create","baseURL","headers","Dashboard","props","state","text","globalList","onClickButton1","bind","onClickButton2","getGlobalLeaderboard","currentComponent","get","then","response","setState","data","catch","error","console","log","leaderboard","map","item","name","points","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport './bootstrap.css';\r\nimport './FriendsList.css'\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nvar instance = axios.create({\r\n    baseURL: \"http://localhost/8080\",\r\n    headers:{\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        'Accept': 'application/json',\r\n        'Access-Control-Allow-Origin': '*'\r\n    }\r\n})\r\n\r\nclass Dashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            text:\r\n                <>\r\n                    <ListGroup.Item>Friends?</ListGroup.Item>\r\n                    <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\r\n                    <ListGroup.Item>Vestibulum at eros</ListGroup.Item>\r\n                </>,\r\n            globalList:[]\r\n        };\r\n\r\n        this.onClickButton1 = this.onClickButton1.bind(this);\r\n        this.onClickButton2 = this.onClickButton2.bind(this);\r\n        this.getGlobalLeaderboard = this.getGlobalLeaderboard.bind(this);\r\n    }\r\n    getGlobalLeaderboard() {\r\n        let currentComponent = this;\r\n        instance.get('/leaderboard/global').then(function (response) {\r\n            currentComponent.setState({\r\n                globalList: response.data})\r\n        }).catch(function (error) {\r\n            console.log(error)\r\n        })\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.getGlobalLeaderboard();\r\n    }\r\n\r\n\r\n        onClickButton1() {\r\n            const leaderboard = this.state.globalList.map(function(item){\r\n                return <ListGroup.Item> {item.name} </ListGroup.Item>\r\n\r\n            });\r\n\r\n            this.setState({\r\n                text:{leaderboard}\r\n            });\r\n        }\r\n\r\n        onClickButton2()  {\r\n            this.setState({\r\n                text:             <>\r\n                    <ListGroup.Item>AHHHH</ListGroup.Item>\r\n                    <ListGroup.Item>GLOBAL</ListGroup.Item>\r\n                    <ListGroup.Item>oof</ListGroup.Item>\r\n                </>\r\n            });\r\n        }\r\n\r\n     componentDidMount() {\r\n         this.getGlobalLeaderboard()\r\n     }\r\n\r\n    render () {\r\n        const leaderboard = this.state.globalList.map(function(item){\r\n            return <ListGroup.Item><div className=\"name\">{item.name}</div><div className=\"score\">{item.points}</div></ListGroup.Item>\r\n        });\r\n        return (\r\n            <>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Nav variant=\"tabs\" defaultActiveKey=\"#global\">\r\n                            <Nav.Item>\r\n                                <Nav.Link href=\"#friends\" onClick={this.onClickButton1}>Friends</Nav.Link>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <Nav.Link href=\"#global\">Global</Nav.Link>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Rankings</Card.Title>\r\n                        <Card.Text>\r\n                            <ListGroup className=\"list-group-flush\">\r\n                                {/*{this.state.text}*/}\r\n                                {leaderboard}\r\n                            </ListGroup>\r\n\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}